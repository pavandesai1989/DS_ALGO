#include<iostream>
#include<vector>
#include<unordered_map>
#include<queue>
using namespace std;

long long minCost(long long arr[], long long n)
{
	long long res = 0;
	priority_queue<long long, vector<long long>, greater<long long>>  pq;

	for (int i = 0; i < n; i++)
		pq.push(arr[i]);

	while (pq.size() > 1)
	{
		long long first = pq.top();
		pq.pop();
		long long second = pq.top();
		pq.pop();

		res = res + first + second;
		pq.push(first + second);
	}

	return res;
}

int main()
{
	long long arr[] = { 4, 2, 7, 6, 9 };

	long long size = sizeof(arr) / sizeof(arr[0]);

	cout << minCost(arr,size) << endl;
	return 0;
}
