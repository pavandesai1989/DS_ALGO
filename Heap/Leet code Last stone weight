#include<iostream>
#include<vector>
#include<unordered_map>
#include<queue>
using namespace std;

int lastStoneWeight(vector<int>& stones)
{
	priority_queue<int> pq(stones.begin(), stones.end()); //max heap
	int res = 0;

	if (pq.size() == 1) //only 1 ele in heap
	{
		res = pq.top();
		pq.pop();
		return res;
	}

	while (pq.size()>=2)
	{
		int first = pq.top();
		pq.pop();

		int second = pq.top();
		pq.pop();

		if (second<=first && first != second)
		{
			pq.push(abs(first - second));
		}
	}
	if (pq.empty())
		return 0;
	else
	{
		res = pq.top();
		pq.pop();
		return res;
	}
	
}

int main()
{
	vector<int> v = { 2,2 };

	cout << lastStoneWeight(v) << endl;
	return 0;
}
