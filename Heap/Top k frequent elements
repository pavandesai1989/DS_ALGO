#include<iostream>
#include<vector>
#include<unordered_map>
#include<queue>
using namespace std;


struct mypair
{
	int val;
	int freq;

	mypair(int v, int f)
	{
		val = v;
		freq = f;
	}
};

struct mycompare
{
	bool operator()(pair<int,int> p1, pair<int,int> p2)
	{
		if (p1.second == p2.second)
			return p1.first > p2.first;

		return p1.second < p2.second; //frequency 
	}
};


void print_N_mostFrequentNumber(int arr[],int size,int k)
{
	unordered_map<int, int> mymap;
	for (int i = 0; i < size; i++)
		mymap[arr[i]]++;

	for (auto ele : mymap)
		cout << ele.first << " "<<ele.second<<endl;

	priority_queue<pair<int,int>,vector<pair<int,int>>, mycompare> pq(mymap.begin(),mymap.end());

	// display the top k numbers
	cout << k << " numbers with most occurrences are:\n";
	for (int i = 1; i <= k; i++) {
		cout << pq.top().first << " ";
		pq.pop();
	}
}


int main()
{
	int arr[] = { 3, 1, 4, 4, 5, 2, 6, 1 };
	int n = sizeof(arr) / sizeof(arr[0]);
	int k = 2;
	print_N_mostFrequentNumber(arr, n, k);
	return 0;
}
