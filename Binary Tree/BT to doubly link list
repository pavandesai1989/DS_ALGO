#include<iostream>
#include<vector>
using namespace std;

class node
{
public:
	int data;
	node* left;
	node* right;

public:
	node(int d) :data(d), left(nullptr), right(nullptr) {
	}
};

void Inorder(node* root)
{
	if (root != nullptr)
	{
		Inorder(root->left);
		cout << root->data << " ";
		Inorder(root->right);
	}
}


node* Binary_TO_DLL(node* root)
{
	if (!root)  return root;
	static node* prev = NULL;
	node* head = Binary_TO_DLL(root->left);

	if (prev == NULL)
		head = root;
	else
	{
		root->left = prev;
		prev->right = root;
	}

	prev = root;

	Binary_TO_DLL(root->left);	   	  
	return head;
}

int main()
{
	node* root = new node(10);

	root->left = new node(5);
	root->right = new node(20);

	root->right->left = new node(30);
	root->right->right = new node(35);


	node* res = Binary_TO_DLL(root);

	return 0;
}
