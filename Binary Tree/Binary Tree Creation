#include<iostream>
#include<vector>
using namespace std;


class node
{
public:
	int data;
	node* left;
	node* right;

public:
	node(int d):data(d),left(nullptr),right(nullptr){
	}
};

void Inorder(node* root)
{
	if (root != nullptr)
	{
		Inorder(root->left);
		cout << root->data << " ";
		Inorder(root->right);
	}
}

void Preorder(node* root)
{
	if (root != nullptr)
	{
		cout << root->data << " ";
		Preorder(root->left);
		Preorder(root->right);
	}
}

//void Postorder(node* root)
//{
//	if (root != nullptr)
//	{
//		Postorder(root->left);
//		Postorder(root->right);
//		cout << root->data << " ";
//	}
//}

vector<int> postOrder(node* root)
{
	vector<int> vec;
	while (root != NULL)
	{
		postOrder(root->left);
		postOrder(root->right);

		vec.push_back(root->data);
		return vec;
	}
	return vec;
}



int main()
{
	node* root = new node(10);

	root->left = new node(20);
	root->right = new node(30);

	root->left->left = new node(40);
	root->left->right = new node(50);

	//cout << "In order traversal is " << endl;
	//Inorder(root);
	//cout << endl;

	//cout << "Pre order traversal is " << endl;
	//Preorder(root);
	//cout << endl;

	cout << "Post order traversal is " << endl;
	vector<int> vec =  postOrder(root);

	for (auto ele : vec)
		cout << ele << " ";

	return 0;
}
