#include<iostream>
#include<algorithm>
using namespace std;

class node
{
public:
	int data;
	node* left;
	node* right;

public:
	node(int d) :data(d), left(nullptr), right(nullptr) {
	}
};

void Inorder(node* root)
{
	if (root != nullptr)
	{
		Inorder(root->left);
		cout << root->data << " ";
		Inorder(root->right);
	}
}

int HeightOfBinaryTree(node* root)
{
	if (root == nullptr) return 0;

	return std::max(HeightOfBinaryTree(root->left), HeightOfBinaryTree(root->right)) + 1;
}

int main()
{
	node* root = new node(10);
    root->right = new node(30);

	root->right->left = new node(40);
	root->right->right = new node(50);

	root->right->right->left = new node(70);
	cout << "Height of the Binary tree is " << HeightOfBinaryTree(root) << endl;


	return 0;
}
