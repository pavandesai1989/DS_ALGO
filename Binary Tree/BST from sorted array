#include<iostream>
using namespace std;

class Node
{
public:
	int data;
	Node* left;
	Node* right;

public:
	Node(int d) :data(d), left(nullptr), right(nullptr) {

	}
};


Node* ArrayToBST(int arr[],int start,int end )
{
	if (start > end)  return NULL;

	int mid = (start + end)/2;
	Node* root = new Node(arr[mid]);

	root->left = ArrayToBST(arr,start,mid-1);
	root->right = ArrayToBST(arr, mid + 1, end);

	return root;
}


void Preorder(Node* root)
{
	if (root == NULL)  return;
	cout << root->data << " ";
	Preorder(root->left);
	Preorder(root->right);
}



int main()
{
	int arr[] = { 1, 2, 3, 4, 5, 6, 7 };
	int n = sizeof(arr) / sizeof(arr[0]);

	Node* root = NULL;

	root = ArrayToBST(arr,0,n-1);

	Preorder(root);

	return 0;
}
